{"version":3,"sources":["assets/images/logo-mini.svg","assets/images/faces/face8.jpg","assets/images/logo.png","app/shared/Spinner.js","app/AppRoutes.js","app/shared/Navbar.js","app/shared/Sidebar.js","app/shared/Footer.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Spinner","className","Component","Dashboard","lazy","Buttons","Dropdowns","Typography","BasicElements","BasicTable","FontAwesome","ChartJs","Project","CopyProject","CreateProject","ModelPage","Train","Test","Deploy","Dataset","Text","Video","Assignment","Error404","Error500","Login","Register1","BlankPage","AppRoutes","fallback","exact","path","component","to","Navbar","document","querySelector","classList","toggle","href","onClick","evt","preventDefault","src","require","alt","type","body","Dropdown","alignRight","Toggle","Menu","Item","this","toggleOffcanvas","Sidebar","state","menuState","setState","Object","keys","length","forEach","i","prevProps","props","location","onRouteChanged","remove","obj","isPathActive","id","target","basicUiMenuOpen","toggleMenuState","data-toggle","Collapse","in","pathname","startsWith","querySelectorAll","el","addEventListener","contains","add","withRouter","Footer","rel","App","navbarComponent","isFullPageLayout","sidebarComponent","footerComponent","console","log","window","scrollTo","fullPageLayoutRoutes","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e20715d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-mini.8539ea86.svg\";","module.exports = __webpack_public_path__ + \"static/media/face8.16958c47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d87464b9.png\";","import React, { Component } from 'react'\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"spinner-wrapper\">\n          <div className=\"donut\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Spinner\n","import React, { Component,Suspense, lazy } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Spinner from '../app/shared/Spinner';\n\nconst Dashboard = lazy(() => import('./dashboard/Dashboard'));\n\nconst Buttons = lazy(() => import('./basic-ui/Buttons'));\nconst Dropdowns = lazy(() => import('./basic-ui/Dropdowns'));\nconst Typography = lazy(() => import('./basic-ui/Typography'));\n\nconst BasicElements = lazy(() => import('./form-elements/BasicElements'));\n\nconst BasicTable = lazy(() => import('./tables/BasicTable'));\n\nconst FontAwesome = lazy(() => import('./icons/FontAwesome'));\n\n\nconst ChartJs = lazy(() => import('./charts/ChartJs'));\n// my AImate new Routes\nconst Project = lazy(() => import('./components/Project/project'));\nconst CopyProject = lazy(() => import('./components/CopyProject/copyproject'));\nconst CreateProject = lazy(() => import('./components/CreateProject/createproject'));\nconst ModelPage = lazy(() => import('./components/ModelPage/modelpage'));\nconst Train = lazy(() => import('./components/Train/train'));\nconst Test = lazy(() => import('./components/Test/test'));\nconst Deploy = lazy(() => import('./components/Deploy/deploy'));\nconst Dataset = lazy(() => import('./components/Dataset/dataset'));\nconst Text = lazy(() => import('./components/Text/text'));\nconst Video = lazy(() => import('./components/Video/video'));\nconst Assignment = lazy(() => import('./components/Assignment/assignment'));\n\n//\nconst Error404 = lazy(() => import('./user-pages/Error404'));\nconst Error500 = lazy(() => import('./user-pages/Error500'));\n\nconst Login = lazy(() => import('./user-pages/Login'));\nconst Register1 = lazy(() => import('./user-pages/Register'));\n\nconst BlankPage = lazy(() => import('./user-pages/BlankPage'));\n\n\nclass AppRoutes extends Component {\n  render () {\n    return (\n      <Suspense fallback={<Spinner/>}>\n        <Switch>\n        <Route exact path=\"/\" component={ Dashboard } />\n\n          <Route exact path=\"/dashboard\" component={ Dashboard } />\n\n          <Route path=\"/basic-ui/buttons\" component={ Buttons } />\n          <Route path=\"/basic-ui/dropdowns\" component={ Dropdowns } />\n          <Route path=\"/basic-ui/typography\" component={ Typography } />\n\n          <Route path=\"/form-Elements/basic-elements\" component={ BasicElements } />\n\n          <Route path=\"/tables/basic-table\" component={ BasicTable } />\n\n          <Route path=\"/icons/font-awesome\" component={ FontAwesome } />\n\n          <Route path=\"/charts/chart-js\" component={ ChartJs } />\n\n\n          <Route path=\"/login\" component={ Login } />\n          <Route path=\"/register\" component={ Register1 } />\n\n          <Route path=\"/error-404\" component={ Error404 } />\n          <Route path=\"/error-500\" component={ Error500 } />\n\n          <Route path=\"/user-pages/blank-page\" component={ BlankPage } />\n          <Route path=\"/form-elements/project\" component={Project} />\n          <Route path=\"/form-elements/copyproject\" component={CopyProject} />\n          <Route path=\"/form-elements/createproject\" component={CreateProject} />\n\n          <Route path=\"/form-elements/modelpage\" component={ModelPage} />\n\n          <Route path=\"/form-elements/train\" component={Train} />\n\n          <Route path=\"/form-elements/test\" component={Test} />\n\n          <Route path=\"/form-elements/deploy\" component={Deploy} />\n\n          <Route path=\"/form-elements/dataset\" component={Dataset} />\n\n          <Route path=\"/basic-ui/assignment\" component={ Assignment } />\n\n          <Route path=\"/basic-ui/video\" component={ Video } />\n\n          <Route path=\"/basic-ui/text\" component={ Text } />\n\n\n          <Redirect to=\"/user-pages/error-404\" />\n        </Switch>\n      </Suspense>\n    );\n  }\n}\n\nexport default AppRoutes;","import React, { Component } from 'react';\nimport { Dropdown } from 'react-bootstrap';\n\nclass Navbar extends Component {\n  toggleOffcanvas() {\n    document.querySelector('.sidebar-offcanvas').classList.toggle('active');\n  }\n  render () { \n    return (\n      <nav className=\"navbar col-lg-12 col-12 p-lg-0 fixed-top d-flex flex-row\">\n        <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-between\">\n        <a className=\"navbar-brand brand-logo-mini align-self-center d-lg-none\" href=\"!#\" onClick={evt =>evt.preventDefault()}><img src={require(\"../../assets/images/logo-mini.svg\")} alt=\"logo\" /></a>\n          <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" onClick={ () => document.body.classList.toggle('sidebar-icon-only') }>\n            <i className=\"mdi mdi-menu\"></i>\n          </button>\n          {/* <ul className=\"navbar-nav navbar-nav-left header-links\">\n            <li className=\"nav-item d-none d-md-flex\">\n              <a href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"nav-link\">Schedule <span className=\"badge badge-primary ml-1\">New</span>\n              </a>\n            </li>\n            <li className=\"nav-item active d-none d-xl-flex\">\n              <a href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"nav-link\">\n                <i className=\"mdi mdi-elevation-rise\"></i>Reports</a>\n            </li>\n            <li className=\"nav-item d-none d-lg-flex\">\n              <a href=\"!#\" onClick={evt =>evt.preventDefault()} className=\"nav-link\">\n                <i className=\"mdi mdi-bookmark-plus-outline\"></i>Score</a>\n            </li>\n          </ul> */}\n          <ul className=\"navbar-nav navbar-nav-right ml-lg-auto\">\n            {/* <li className=\"nav-item  nav-profile border-0\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator p-0 toggle-arrow-hide bg-transparent\">\n                  <i className=\"mdi mdi-file-outline\"></i>\n                  <span className=\"count\">7</span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"navbar-dropdown preview-list\">\n                  <Dropdown.Item className=\"dropdown-item  d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <p className=\"mb-0 font-weight-medium float-left\">You have 7 unread mails </p>\n                    <span className=\"badge badge-pill badge-primary float-right\">View all</span>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src={require(\"../../assets/images/faces/face10.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\n                    <div className=\"preview-item-content flex-grow py-2\">\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">Marian Garner </p>\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\n                    </div>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src={require(\"../../assets/images/faces/face12.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\n                    <div className=\"preview-item-content flex-grow py-2\">\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">David Grey </p>\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\n                    </div>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <img src={require(\"../../assets/images/faces/face1.jpg\")} alt=\"profile\" className=\"img-sm profile-pic\" /> </div>\n                    <div className=\"preview-item-content flex-grow py-2\">\n                      <p className=\"preview-subject ellipsis font-weight-medium text-dark\">Travis Jenkins </p>\n                      <p className=\"font-weight-light small-text\"> The meeting is cancelled </p>\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n            <li className=\"nav-item  nav-profile border-0 pl-4\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator p-0 toggle-arrow-hide bg-transparent\">\n                  <i className=\"mdi mdi-bell-outline\"></i>\n                  <span className=\"count bg-success\">4</span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"navbar-dropdown preview-list\">\n                  <Dropdown.Item className=\"dropdown-item py-3 d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <p className=\"mb-0 font-weight-medium float-left\">You have 4 new notifications </p>\n                    <span className=\"badge badge-pill badge-primary float-right\">View all</span>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <i className=\"mdi mdi-alert m-auto text-primary\"></i>\n                    </div>\n                    <div className=\"preview-item-content py-2\">\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">Application Error</h6>\n                      <p className=\"font-weight-light small-text mb-0\"> Just now </p>\n                    </div>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <i className=\"mdi mdi-settings m-auto text-primary\"></i>\n                    </div>\n                    <div className=\"preview-item-content py-2\">\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">Settings</h6>\n                      <p className=\"font-weight-light small-text mb-0\"> Private message </p>\n                    </div>\n                  </Dropdown.Item>\n                  <div className=\"dropdown-divider\"></div>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"preview-thumbnail\">\n                      <i className=\"mdi mdi-airballoon m-auto text-primary\"></i>\n                    </div>\n                    <div className=\"preview-item-content py-2\">\n                      <h6 className=\"preview-subject font-weight-normal text-dark mb-1\">New user registration</h6>\n                      <p className=\"font-weight-light small-text mb-0\"> 2 days ago </p>\n                    </div>\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li> */}\n            <li className=\"nav-item  nav-profile border-0\">\n              <Dropdown alignRight>\n                <Dropdown.Toggle className=\"nav-link count-indicator bg-transparent\">\n                  \n                  <img className=\"img-xs rounded-circle\" src={require(\"../../assets/images/faces/face8.jpg\")} alt=\"Profile\" />\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"preview-list navbar-dropdown pb-3\">\n                  <Dropdown.Item className=\"dropdown-item p-0 preview-item d-flex align-items-center border-bottom\" href=\"!#\" onClick={evt =>evt.preventDefault()}>\n                    <div className=\"d-flex\">\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\n                        <i className=\"mdi mdi-bookmark-plus-outline mr-0\"></i>\n                      </div>\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center border-left border-right\">\n                        <i className=\"mdi mdi-account-outline mr-0\"></i>\n                      </div>\n                      <div className=\"py-3 px-4 d-flex align-items-center justify-content-center\">\n                        <i className=\"mdi mdi-alarm-check mr-0\"></i>\n                      </div>\n                    </div>\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0 mt-2\" onClick={evt =>evt.preventDefault()}>\n                    Manage Accounts\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt =>evt.preventDefault()}>\n                   Change Password \n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt =>evt.preventDefault()}>\n                    Check Inbox\n                  </Dropdown.Item>\n                  <Dropdown.Item className=\"dropdown-item preview-item d-flex align-items-center border-0\" onClick={evt =>evt.preventDefault()}>\n                    Sign Out\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </li>\n          </ul>\n          <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" onClick={this.toggleOffcanvas}>\n            <span className=\"mdi mdi-menu\"></span>\n          </button>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\n\nclass Sidebar extends Component {\n  state = {};\n\n  toggleMenuState(menuState) {\n    if (this.state[menuState]) {\n      this.setState({[menuState] : false});\n    } else if(Object.keys(this.state).length === 0) {\n      this.setState({[menuState] : true});\n    } else {\n      Object.keys(this.state).forEach(i => {\n        this.setState({[i]: false});\n      });\n      this.setState({[menuState] : true});\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    document.querySelector('#sidebar').classList.remove('active');\n    Object.keys(this.state).forEach(i => {\n      this.setState({[i]: false});\n    });\n\n    const dropdownPaths = [\n      {path:'/basic-ui', state: 'basicUiMenuOpen'},\n      {path:'/form-elements', state: 'formElementsMenuOpen'},\n      {path:'/tables', state: 'tablesMenuOpen'},\n      {path:'/icons', state: 'iconsMenuOpen'},\n      {path:'/charts', state: 'chartsMenuOpen'},\n      {path:'/user-pages', state: 'userPagesMenuOpen'},\n    ];\n\n    dropdownPaths.forEach((obj => {\n      if (this.isPathActive(obj.path)) {\n        this.setState({[obj.state] : true})\n      }\n    }));\n \n  } \n  render () {\n    return (\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n        <div className=\"text-center sidebar-brand-wrapper d-flex align-items-center\">\n          <a className=\"sidebar-brand brand-logo\" href=\"index.html\"><img src={require(\"../../assets/images/logo.png\")} alt=\"logo\" /></a>\n          <a className=\"sidebar-brand brand-logo-mini pt-3\" href=\"index.html\"><img src={require(\"../../assets/images/logo-mini.svg\" )} alt=\"logo\" /></a>\n        </div>\n        <ul className=\"nav\">\n          <li className=\"nav-item nav-profile not-navigation-link\">\n            <div className=\"nav-link\">\n              \n              <a href=\"https://myaimateplayground.ddns.net\" target='blank' className=\"btn btn-primary btn-block\">myAImate Playground </a>\n            </div>\n          </li>\n          <li className={ this.isPathActive('/dashboard') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"mdi mdi-television menu-icon\"></i>\n              <span className=\"menu-title\">Dashboard</span>\n            </Link>\n          </li>\n          {/* <li className={ this.isPathActive('/basic-ui') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.basicUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('basicUiMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n              <span className=\"menu-title\">Courses</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.basicUiMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/buttons\">Texts</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/dropdowns\">Videos</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/typography') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/typography\">Assignments</Link></li>\n              </ul>\n            </Collapse>\n          </li> */}\n\n          <li className={ this.isPathActive('/basic-ui') ? 'nav-item active' : 'nav-item' }>\n            <div className={ this.state.basicUiMenuOpen ? 'nav-link menu-expanded' : 'nav-link' } onClick={ () => this.toggleMenuState('basicUiMenuOpen') } data-toggle=\"collapse\">\n              <i className=\"mdi mdi-crosshairs-gps menu-icon\"></i>\n              <span className=\"menu-title\">Courses</span>\n              <i className=\"menu-arrow\"></i>\n            </div>\n            <Collapse in={ this.state.basicUiMenuOpen }>\n              <ul className=\"nav flex-column sub-menu\">\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/buttons') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/text\">Texts</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/dropdowns') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/video\">Videos</Link></li>\n                <li className=\"nav-item\"> <Link className={ this.isPathActive('/basic-ui/typography') ? 'nav-link active' : 'nav-link' } to=\"/basic-ui/assignment\">Assignments</Link></li>\n              </ul>\n            </Collapse>\n          </li>\n         \n          <li className={ this.isPathActive('/form-elements') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/form-elements/project\">\n              <i className=\"mdi mdi-format-list-bulleted menu-icon\"></i>\n              <span className=\"menu-title\">Projects</span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/tables') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/tables/basic-table\">\n              <i className=\"mdi mdi-table-large menu-icon\"></i>\n              <span className=\"menu-title\">Competitions</span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/icons') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/icons/font-awesome\">\n              <i className=\"mdi mdi-account-box-outline menu-icon\"></i>\n              <span className=\"menu-title\">Progress</span>\n            </Link>\n          </li>\n          <li className={ this.isPathActive('/charts') ? 'nav-item active' : 'nav-item' }>\n            <Link className=\"nav-link\" to=\"/charts/chart-js\">\n              <i className=\"mdi mdi-chart-line menu-icon\"></i>\n              <span className=\"menu-title\">Setting</span>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n\n  isPathActive(path) {\n    return this.props.location.pathname.startsWith(path);\n  }\n\n  componentDidMount() {\n    this.onRouteChanged();\n    // add className 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\n    const body = document.querySelector('body');\n    document.querySelectorAll('.sidebar .nav-item').forEach((el) => {\n      \n      el.addEventListener('mouseover', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.add('hover-open');\n        }\n      });\n      el.addEventListener('mouseout', function() {\n        if(body.classList.contains('sidebar-icon-only')) {\n          el.classList.remove('hover-open');\n        }\n      });\n    });\n  }\n\n}\n\nexport default withRouter(Sidebar);","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container-fluid\">\n          <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\n            <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © 2020 <a href=\"https://www.myaimate.com/\" target=\"_blank\" rel=\"noopener noreferrer\">myAimate</a>. All rights reserved.</span>\n            <span className=\"float-none float-sm-right d-block mt-1 mt-sm-0 text-center\">Hand-crafted & made with India</span>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport Navbar from './shared/Navbar';\nimport Sidebar from './shared/Sidebar';\nimport Footer from './shared/Footer';\n\nclass App extends Component {\n  state = {}\n  componentDidMount() {\n    this.onRouteChanged();\n  }\n  render () {\n    let navbarComponent = !this.state.isFullPageLayout ? <Navbar/> : '';\n    let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n    let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\n    return (\n      <div className=\"container-scroller\">\n        { navbarComponent }\n        <div className=\"container-fluid page-body-wrapper\">\n          { sidebarComponent }\n          <div className=\"main-panel\">\n            <div className=\"content-wrapper\">\n              <AppRoutes/>\n            </div>\n            { footerComponent }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.onRouteChanged();\n    }\n  }\n\n  onRouteChanged() {\n    console.log(\"ROUTE CHANGED\");\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = ['/login', '/register', '/error-404', '/error-500','/', '/landing-page'];\n    for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n        this.setState({\n          isFullPageLayout: true\n        })\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n        break;\n      } else {\n        this.setState({\n          isFullPageLayout: false\n        })\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n      }\n    }\n  }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}